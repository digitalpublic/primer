[1] Consider keeping a written inventory of your data or digital assets. It doesn't have to be complex: one easy way to start is to identify the digital assets that each of your project activities uses, needs, or creates. At a minimum, this helps your team better understand how a project works. Asset inventories can also ensure that your team minimizes duplicative work, and that they can find opportunities for new ways to use what your project produces. [2] Your project evolves and changes over time; your project's assets change over time too. To the extent that it's useful, your inventory should be a living document, and updated to match the current state of your project. To start, consider doing this once every 3-6 months.

[3] Your digital assets are valuable, for your organization and your members. Because they aren't physical objects, it's easy for digital to slip through the cracks and not have anyone take responsibility for them, or to delegate responsibility solely to an internal IT function. Avoid this trap. Include responsibility for data in job descriptions, team objectives, and organizational strategy. You may not cover every single asset on your first pass, but you can begin to create a culture of ownership over data and digital assets.

[4] Creating a written data handling policy for your project or organization is important for two reasons. First, it forces you to make and commit to decisions about data collection and management processes. Second, it helps standardize understanding among your staff about how to handle data, and provides a venue for staff to feedback on policies and processes that aren't working as intended. [5] Written practices are necessary, but not sufficient. Your staff need not all be techonlogy experts, but they should have at least a casual understanding of how your project uses data, even if they don't handle it directly. Incorporate trainings into employee onboardings, at a minimum. Instead of creating HR-style trainings that are regular and mandatory, consider finding opportunities to train staff on data as part of regular team activities. Staff-led brownbags and project debriefs are great ways to do this. [6] Technology advances quickly, and so might your project. Adopting new tools or processes may change how your organization handles data in unexpected ways. Every six months, or after the adoption of a new technology tool, consider reviewing your data handling practices with your staff. When you do this, look into the actual data handling proceses that your staff takes, and how they deviate from written policies. This shouldn't necessarily be cause to punish your staff: often, it's an indication that people are finding a new way to solve a problem, or that a policy may not reflect the reality of your organization's work.


[7] Scope creep is a common problem in data and technology projects. It's tempting to be able to do just "one more thing" as the opportunity presents itself. Give in to that instinct too much, though, and you may find that your project has strayed from its goals. One way to look out for scope creep is to ensure that you're collecting and using data for a reason that's relevant to your project. If your project involves assets that don't connect to a project activity, that might be a sign of scope creep. [8] Data is potential, but also risk. To minimize risk related to the data you hold, consider minimizing the data that your project collects and produces. This could involve asking fewer questions of research subjects or members, removing extraneous fields from databases, or deleting data after analysis or use. [9] In addition to minimizing collected data, minimizing the potential uses for data is another way to limit risk. Limiting secondary uses of data by default is a good way to require that each new use of data is justified by your project's goals.

[10] It's not enough to merely have policies about your digital assets. You should spend time tracking how they're actually used, especially for very sensitive datasets. Many data management platforms include audit logs that can help with this process. Other assets may need to be tracked or audited manually. 


---

beneficiaries

[1] Consider deciding who your project is for. Who will benefit if it succeeds? [2] Once you've decided who your project is for, you'll need to be sure that the project continues to work for them. [3] At minimum, you should find ways to consult with your project's beneficiaries. Not only will this feedback help your project, but it can build stronger bonds between your team and your community. [4] While maintaining respect for their time, find ways to regularly involve community members into the oversight and management of your project. This could range to conducting surveys to pick new features for a software product to having a full-blown advisory council that's integrated into your project's oversight processes. [5] Your project may need a written policy to ensure that community interests are prioritized over the interests of other stakeholders. 

[6] Your project may depend on external partners, including vendors. Although this is totally normal, external partners may not share your priorities or your project's. As your project changes, your partnerships may need to change too. Where appropriate, you may consider building partnership agreements that are shorter in time or smaller in scope, and that afford regular review and rescope periods.

[7] External partners should be held to data handling standards that are just as stringent as the ones your team operates under--if not more so. Consider including clauses in your partnership contracts that prohibit uses of your project's data beyond those that are explicitly specified in the contract, or for any purpose that does not solely benefit your project's community.

[8] At minimum, your project and your organization need a conflict of interest policy. External partners should also be vetted for conflicts between their interests and the goals of the project, even if it doesn't directly implicate their involvement in the project.


-- 
management
[1] Your project objectives and activities need people who are responsible for them. 

[2] Your project's oversight structure should be separate from the project's operational management. Whether a board of directors or a supervisor, having an outside perspective is useful to keeping a project on track. [3] There should be clear, written definitions of when an activity requires additional involvement from a project's oversight. An easy way to start is to list existential issues that the project might face.

[4] Although you may not have the same level of control over an external stakeholder as you do an internal stakeholder, you should hold them to the same standards of responsibility. It should be clear what each external stakeholder is responsible for in your project, and *who* from that stakeholder is responsible for fulfilling those duties.

[5] Find ways to give your beneficiaries an active role in the project. Community members should be more than just receipents of your work. They should be actively involved, and have a voice in what happens to it.[6] Ultimately, having a voice in decision-making means being able to change how a project operates: what data is collected, who can access it, and how it is used. How can your members change the direction of a project, even if its just to act as a last line of defense?
--
Permissions
[1] At a bare minimum, any project that deals with data, especially data *about* a community, should decide how that data ought to be used. Keeping a written list of permitted uses is a good way to clearly and simply communicate to your beneficiaries about how data will be used.  [2] Explicitly listing prohibited uses for data is a good way to identify red lines for your project. [3] Some data uses may be both sensitive and mission-critical: memorializing those uses are a good way to ensure that your beneficiaries. [4] As your project changes, you'll need to ensure that your data permissions and processes evolve to match.

[5] A list of permitted and prohibited data uses is a good start, but it's only that: a start. Inevitably, a use for data will arise that you haven't contemplated before. Whether a new idea or a new technology, you'll need a process for handling a novel request for data or a digital asset. Who needs to have a voice in those decisions? [6] Beyond processes for handling novel requests for data, you'll need to develop principles that help staff interrogate a request for data, and compare it to the project's values. 

[7] New opportunities for data can unexpectedly change the character of your project. A consultation process for stakeholders and beneficiaries can help lessen the surprise that new data uses can bring.

[8] Having rules about data isn't enough. Randomly audit past requests for data to ensure that they were scoped appropriately. Sensitive requests may always necessitate an audit after the fact.

[9] Requests for data, especially outside requests for data, should be narrowly tailored to fit the desired use. For example, data can be anonymized, access to fields can be limited, or query results can be provided in place of actual records.

--

Purpose

[1] Your project needs a written reason for existing. [2] Your project's purpose should have a clear connection to your organization's mission. Otherwise, why is your organization pursuing this project? [3] Your project needs supporting objectives: subgoals for how the project's purpose will be achieved. [4] Once you have project objectives, they need to be operationalized with activities. What will your team actually do to achieve the project goals? [5] If you have activities that are not specifically tied to project objectives, you may need to change your project's objectives, or scale back your activities. [6] Consider checking on your project's progress every 3-6 months, with a broader review every year. [7] As your project evolves, consider the possibility that the project's goals need to change, whether to seize a new opportunity or simply because your starting assumptions may not have all been correct.


--
Risks
[1] Any data project, especially one with sensitive data, should track risks in writing. [2] You should regularly review your project's risks--even if it's just to ensure that your staff are still thinking about them. 

[3] Your project's risk tracking should include more than just risks to the project itself: it should track risks that the project may create for the organization it lives in, and to the beneficiaries it affects. [4] Don't forget to include risks related to external partners, such as a platform going offline or losing a feature. [5] Not all risks are equivalent: consider tracking each risk on two scales: likelihood of being realized, and severity if realized. You can use a simple one (low) to five (high) scale for this. [6] Tracking risks alone isn't enough. You should have mitigation measures for each risks you track, and someone responsible for implementing that mitigation.[7] In addition to mitigation, you should have an escalation policy for risks that are especially severe, or especially close to being realized. [8] Risk mitigation isn't meant to be scary: it's meant to help teams take ownership over the possible ways a project could go sideways. Especially for complex projects, consider requiring project teams to think through and track their own risks. 
